{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/MovieFilter/MovieFilter.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","MovieFilter","state","query","handleChange","event","setState","target","value","htmlFor","type","id","placeholder","this","onChange","props","allMovies","filter","toLowerCase","includes","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"4wEAIaA,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,ICtBH,IAAMK,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAKEC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,MAAOE,EAAME,OAAOC,SAP1B,uDAWY,IAAD,OACP,OACE,oCACE,yBAAKlB,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOmB,QAAQ,eAAenB,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEoB,KAAK,OACLC,GAAG,eACHrB,UAAU,QACVsB,YAAY,mBACZJ,MAAOK,KAAKX,MAAMC,MAClBW,SAAUD,KAAKT,kBAMvB,kBAAC,EAAD,CAAYR,OAAQ,YAAIiB,KAAKE,MAAMC,WAChCC,QAAO,SAAAnB,GAAK,OAAIA,EAAMZ,MAAMgC,cAC1BC,SAAS,EAAKjB,MAAMC,MAAMe,gBACpBpB,EAAMX,YAAY+B,cAClBC,SAAS,EAAKjB,MAAMC,MAAMe,yBArC7C,GAAiCE,aAuDjCnB,EAAYP,aAAe,CACzBsB,UAAW,I,WC5CEK,EAXH,kBACV,yBAAK/B,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAa0B,UAAWM,KAE1B,yBAAKhC,UAAU,WAAf,uBCLJiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7d177561.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MoviesList } from '../MoviesList';\n\nexport class MovieFilter extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      query: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"box\">\n          <div className=\"field\">\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={this.state.query}\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n        </div>\n\n        <MoviesList movies={[...this.props.allMovies]\n          .filter(movie => movie.title.toLowerCase()\n            .includes(this.state.query.toLowerCase())\n                || movie.description.toLowerCase()\n                  .includes(this.state.query.toLowerCase()))}\n        />\n      </>\n    );\n  }\n}\n\nMovieFilter.propTypes = {\n  allMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMovieFilter.defaultProps = {\n  allMovies: [],\n};\n","import React from 'react';\nimport './App.scss';\nimport { MovieFilter } from './components/MovieFilter';\nimport moviesFromServer from './api/movies.json';\n\nconst App = () => (\n  <div className=\"page\">\n    <div className=\"page-content\">\n      <MovieFilter allMovies={moviesFromServer} />\n    </div>\n    <div className=\"sidebar\">\n      Sidebar goes here\n    </div>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}